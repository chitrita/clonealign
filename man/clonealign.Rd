% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clonealign.R
\name{clonealign}
\alias{clonealign}
\title{Assign scRNA-seq to clone-of-origin}
\usage{
clonealign(gene_expression_data, copy_number_data, max_iter_em = 100,
  max_iter_adam = 1, rel_tol_em = 1e-06, rel_tol_adam = 1e-06,
  gene_filter_threshold = 0, learning_rate = 0.1, fix_alpha = TRUE,
  clone_specific_phi = TRUE, fix_s = NULL, sigma_hyper = 1,
  saturate = TRUE, verbose = TRUE)
}
\arguments{
\item{gene_expression_data}{A matrix of gene counts or a
\code{SingleCellExperiment}. This should contain raw counts. See \code{details}.}

\item{copy_number_data}{A matrix or data frame of copy number calls for each clone.
See \code{details}.}

\item{max_iter_em}{Maximum number of EM iterations to perform}

\item{max_iter_adam}{The maximum number of Adam iterations to perform in each M-step}

\item{rel_tol_em}{Relative tolerance (change in log-likelihood per EM iteration in percent) below which the
EM algorithm is considered converged}

\item{rel_tol_adam}{The relative tolerance for each Adam update in the M-step below which the
maximization will be considered converged}

\item{gene_filter_threshold}{Genes with total counts below or equal to this threshold will
be filtered out (removes genes with no counts by default)}

\item{learning_rate}{The learning rate to be passed to the Adam optimizer}

\item{fix_alpha}{Should the underlying priors for clone frequencies be fixed? Default TRUE
(values are inferred from the data)}

\item{clone_specific_phi}{Should each clone have distinct over-dispersion parameters? Default TRUE}

\item{fix_s}{Should the size factors be fixed? If \code{NULL} they are jointly inferred from the data, otherwise
a vector corresponding to the number of cells should be specified.}

\item{sigma_hyper}{The hyperparameter governing shrinkage of clone-specific dispersions}

\item{saturate}{Should the CNV-expression relationship saturate above copy number = 4? Default TRUE}

\item{verbose}{Should warnings and EM convergence information be printed? Default TRUE}
}
\value{
An object of class \code{clonealign_fit}. The maximum likelihood estimates of the
clone assignment paramters are in the \code{clone} slot. Maximum likelihood estimates of
all model parameters are in the \code{ml_params} slot.
}
\description{
\code{clonealign} assigns single cells (measured with RNA-seq) to their clones of origin, where
the clones have been inferred from ultra-shallow scDNA-seq and collated into copy number profiles.
}
\details{
\strong{Input format}

\code{gene_expression_data} must either be a \code{SingleCellExperiment} or \code{SummarizedExperiment}
with a \code{counts} assay
representing raw gene expression counts, or a cell by gene matrix of raw counts.

\code{copy_number_data} must either be a \code{matrix}, \code{data.frame} or \code{DataFrame} with a
row for each gene in \code{gene_expression_data} and a column for each of the clones.
If \code{colnames(copy_number_data)} is not \code{NULL} then these names will be used for each of
the clones in the final output.

\strong{Recommended parameter settings}

As with any probabilistic model there are many parameters to set. Through comprehensive simulations regarding
the robustness of the model to mis-specification (ie what's the minimum proportion of genes for which the
CNV-expression relationship can be true and our inferences still valid) we have come up with the following
guidelines for parameter settings, reflected in the default values:

\itemize{
\item{Number of ADAM iterations - if set to 1 we essentially perform gradient descent on the marginal log-likelihood
which empircally appears to have the best performance}
\item{Dispersions should be clone-specific with weak shrinkage (\code{sigma} = 1 appears best)}
\item{The generating probabilities should be fixed to be a priori equal (this corresponds to setting \code{alpha = TRUE})}
\item{The cell size factors are best fixed in advanced by multiplying the total counts of whatever genes are passed
to clonealign by the edgeR (TMM) normalization factors}
}


\strong{Controlling the EM algorithm}

Inference is performed using the EM algorithm (\url{https://en.wikipedia.org/wiki/Expectation-maximization_algorithm})
which uses the log marginal likelihood to monitor convergence. This is controlled using the
\code{rel_tol_em} parameter. When the difference between the new and old log marginal likelihoods normalized
by the absolute value of the old falls below \code{rel_tol_em}, the EM algorithm is considered converged.
The maximum number of iterations to acheive this is set using the \code{max_iter_em} parameter.

In each M-step, maximization is performed using Adam, with learning rate given by \code{learning_rate}. Each M-step
is considered converged with the value of the Q function falls below \code{rel_tol_adam} with a maximum number of iterations
\code{max_iter_adam}.
}
\examples{
library(SingleCellExperiment)
data(example_sce)
copy_number_data <- rowData(example_sce)[,c("A", "B", "C")]
cal <- clonealign(example_sce, copy_number_data)
print(cal)
clones <- cal$clone
}
